# Install specific uv version
ARG UV_VERSION=0.7.9
FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS uv

FROM python:3.12-slim-bookworm

COPY --from=uv /uv /uvx /bin/

# Install the project into `/backend`
WORKDIR /backend

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --no-install-project --group backend

RUN touch README.md

# Then, add the rest of the project source code into the image
COPY src/app src/app
COPY src/data src/data
COPY src/model src/model
COPY src/static src/static
COPY src/templates src/templates

# Sync the project
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --group backend

# Place executables in the environment at the front of the path
ENV PATH="/backend/.venv/bin:$PATH"

EXPOSE 8080

ENTRYPOINT ["uv", "run", "uvicorn", "src.app.main:app", "--host", "0.0.0.0", "--port", "8080"]
